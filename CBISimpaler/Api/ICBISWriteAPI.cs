// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CBISimpaler
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ICBISWriteAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets the IWriteAPI.
        /// </summary>
        IWriteAPI WriteAPI { get; }

        /// <summary>
        /// Set category tree
        /// </summary>
        /// <param name='edit'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CBISWriteAPIModelsCategory>>> SetCategoryTreeWithHttpMessagesAsync(CBISWriteAPIModelsQueryEditCategoryTree edit, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Set category tree
        /// </summary>
        /// <param name='edit'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CBISWriteAPIModelsGeo>>> SetGeoTreeWithHttpMessagesAsync(CBISWriteAPIModelsQueryEditGeoTree edit, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Set category tree for a supplier that is an Operator
        /// </summary>
        /// <param name='edit'>
        /// </param>
        /// <param name='organization'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CBISWriteAPIModelsCategory>>> SetCategoryTreeForSupplierWithHttpMessagesAsync(CBISWriteAPIModelsQueryEditCategoryTree edit, string organization, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Set geo tree for a supplier that is an Operator
        /// </summary>
        /// <param name='edit'>
        /// </param>
        /// <param name='organization'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CBISWriteAPIModelsGeo>>> SetGeoTreeForSupplierWithHttpMessagesAsync(CBISWriteAPIModelsQueryEditGeoTree edit, string organization, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
